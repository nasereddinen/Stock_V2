# Generated by Django 3.2.13 on 2022-04-27 06:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0013_group_email'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.PositiveSmallIntegerField(choices=[(1, 'Tech'), (2, 'Comptable'), (3, 'Manager'), (4, 'superadmin')], default=4)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fournisseur', models.CharField(max_length=80, unique=True)),
                ('nom', models.CharField(max_length=80)),
                ('adresse', models.CharField(blank=True, max_length=250, null=True)),
                ('tel1', models.CharField(blank=True, max_length=50, null=True)),
                ('tel2', models.CharField(blank=True, max_length=50, null=True)),
                ('tel3', models.CharField(blank=True, max_length=50, null=True)),
                ('fax', models.CharField(blank=True, max_length=50, null=True)),
                ('mail', models.CharField(blank=True, max_length=80, null=True)),
                ('activite', models.CharField(blank=True, max_length=80, null=True)),
                ('obs', models.CharField(blank=True, max_length=250, null=True)),
                ('ville', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='distinations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_dis', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref', models.CharField(blank=True, default='0', max_length=50, null=True, verbose_name='RÃ©ference facture')),
                ('Society', models.CharField(blank=True, choices=[('argos', 'argos'), ('jupiter', 'jupiter'), ('ithaque', 'ithaque'), ('tanis', 'tanis')], default='0', max_length=50, null=True)),
                ('dateen', models.DateField()),
                ('phone_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.contact', verbose_name='fournisseur')),
            ],
        ),
        migrations.CreateModel(
            name='Familles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('famille', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'familles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SousFamille',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=20)),
                ('marque', models.CharField(max_length=20)),
                ('model', models.CharField(max_length=20)),
                ('seuil', models.IntegerField()),
                ('pid1', models.CharField(max_length=20, unique=True)),
                ('active', models.CharField(choices=[('oui', 'oui'), ('non', 'non')], max_length=3, verbose_name='consommable')),
                ('ville', models.CharField(blank=True, max_length=6, null=True)),
                ('groupresp', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='auth.group', verbose_name='groupe_resp')),
                ('id_famille', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.familles', verbose_name='Les Articles')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('complete', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('by', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('receive_quantity', models.IntegerField(blank=True, null=True)),
                ('receive_by', models.CharField(blank=True, max_length=50, null=True)),
                ('issue_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('issue_by', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('reorder_level', models.IntegerField(blank=True, default='0', null=True, verbose_name='garantie')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('ci', models.CharField(blank=True, max_length=50, null=True)),
                ('fac', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.facture')),
                ('id_sous_famille', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.sousfamille', verbose_name='Article')),
                ('issue_to', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='users.distinations', verbose_name='Emplacement')),
            ],
        ),
        migrations.CreateModel(
            name='Historique_Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codeibar', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.IntegerField(blank=True, default='0', null=True)),
                ('receive_quantity', models.IntegerField(blank=True, default='0', null=True)),
                ('receive_by', models.CharField(blank=True, max_length=50, null=True)),
                ('issue_quantity', models.IntegerField(blank=True, default='0', null=True)),
                ('issue_by', models.CharField(blank=True, max_length=50, null=True)),
                ('issue_to', models.CharField(blank=True, max_length=50, null=True)),
                ('ci', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('reorder_level', models.IntegerField(blank=True, default='0', null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('id_sous_famille', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.sousfamille')),
            ],
        ),
        migrations.CreateModel(
            name='demande',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.stock')),
                ('demander', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Contrat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=20)),
                ('dateacquisition', models.DateField(blank=True, db_column='dateAcquisition', null=True)),
                ('echeance', models.DateField(blank=True, null=True)),
                ('montant', models.CharField(max_length=20)),
                ('observation', models.CharField(blank=True, max_length=20, null=True)),
                ('ville', models.CharField(choices=[('tunis', 'tunis'), ('sousse', 'sousse'), ('nice', 'nice')], max_length=6)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.sousfamille')),
                ('fournisseur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.contact')),
            ],
        ),
    ]
